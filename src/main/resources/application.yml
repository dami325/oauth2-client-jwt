server:
  port: 8080

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/oauth2?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  security:
    oauth2:
      client:
        registration:
          naver: # GET : /oauth2/authorization/naver
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email

          google: # GET : /oauth2/authorization/google
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email


          battle: # GET : /
            client-name: battle
            client-id: ${BATTLE_CLIENT_ID}
            client-secret: ${BATTLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/battle
            authorization-grant-type: authorization_code
            scope:
              - sc2.profile
#              - openid


        provider: # ??? ?? ?? ??? ???? ?? ?? ??
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          battle:
            authorization-uri: https://oauth.battle.net/authorize
            token-uri: https://oauth.battle.net/token
            user-info-uri: https://oauth.battle.net/userinfo
            user-name-attribute: sub
#            user-info-authentication-method: header
#            issuer-uri: https://oauth.battle.net

  jwt:
    secret: lstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb


# SWAGGER UI 설정 시작 https://springdoc.org/#properties 참고
springdoc:
  packages-to-scan: com.example.oauthjwt
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
#    path: /
    disable-swagger-default-url: true
    display-request-duration: true # API 실행 시 처리 소요 시간의 표시 여부
    operations-sorter: alpha # 개별 API 알파벳순 정렬
    enabled: true # SWAGGER UI 활성화
    tags-sorter: alpha # Tag 알파벳순 정렬
# SWAGGER UI 설정 끝
logging:
  level:
    org.springframework.security: DEBUG